/*
 * TListaCalendario.h
 *
 *  Created on: 13/03/2015
 *      Author: dsr20
 */

#ifndef TLISTACALENDARIO_H_
#define TTLISTACALENDARIO_H_

#include "tcalendario.h"
using namespace std;

Class TListaCalendario 
{
  private:
	TNodoCalendario *primero;
  public:
	// Constructor por defecto
	TListaCalendario();
	// Constructor de copia
	TListaCalendario(TListaCalendario &);
	//Destructor
	~TListaCalendario();
	// Sobrecarga del operador asignación
	TListaCalendario & operator=(TListaCalendario &);

	// Sobrecarga del operador igualdad
	bool operator==(TListaCalendario &)
	//Sobrecarga del operador suma
	TListaCalendario operator+ (TListaCalendario &);
	//Sobrecarga del operador resta
	TListaCalendario operator- (TListaCalendario &);
	// Inserta el elemento en la posición que le corresponda dentro de la lista
	Bool Insertar(TCalendario &);
	// Busca y borra el elemento
	bool Borrar(TCalendario &);
	// Borra el elemento que ocupa la posición indicada
	bool Borrar (TListaPos &);
	//Borra todos los Calendarios con fecha ANTERIOR a la pasada.
	bool Borrar(int,int,int);
	// Devuelve true si la lista está vacía, false en caso contrario
	bool EsVacia();
	// Obtiene el elemento que ocupa la posición indicada
	TCalendario Obtener(TListaPos &)
	// Devuelve true si el Calendario está en la lista.
	bool Buscar(TCalendario &);
	// Devuelve la longitud de la lista
	int Longitud();
	// Devuelve la primera posición en la lista
	TListaPos Primera();
	// Devuelve la última posición en la lista
	TListaPos Ultima();
	// Suma de dos sublistas en una nueva lista
	TListaCalendario SumarSubl (int I_L1, int F_L1, TListaCalendario & L2, int I_L2, int F_L2);
	// Extraer un rango de nodos de la lista
	TListaCalendario ExtraerRango (int n1, int n2);
	//Sobrecarga del operador salida
	friend ostream & operator<<(ostream &, TListaCalendario &);



};
#endif
